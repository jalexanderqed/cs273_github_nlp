hi,i build rocksdb with clang 3.4,with a little change .
the build command:
CC=clang CXX=clang++ CXXFLAGS="-I/usr/local/include/c++/v1/" LDFLAGS="-lc++" make

except a link error

```
db/db_bench.o: In function `main':
rocksdb/db/db_bench.cc:2771: undefined reference to `google::SetUsageMessage(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)'
```

such like the four files
 db/db_bench.cc
 table/table_reader_bench.cc
 tools/db_repl_stress.cc
 tools/db_stress.cc 

comment these lines can build ok and run test ok,I make sure that has -lgflags link tag.

with this patch for fix clang -Werror

```
diff --git a/db/memtable.cc b/db/memtable.cc
index 775b802..c784de1 100644
--- a/db/memtable.cc
+++ b/db/memtable.cc
@@ -562,8 +562,8 @@ size_t MemTable::CountSuccessiveMergeEntries(const LookupKey& key) {
     const char* entry = iter->key();
     uint32_t key_length = 0;
     const char* iter_key_ptr = GetVarint32Ptr(entry, entry + 5, &key_length);
-    if (!comparator_.comparator.user_comparator()->Compare(
-        Slice(iter_key_ptr, key_length - 8), key.user_key()) == 0) {
+    if (!(comparator_.comparator.user_comparator()->Compare(
+        Slice(iter_key_ptr, key_length - 8), key.user_key()) == 0)) {
       break;
     }

diff --git a/include/rocksdb/env.h b/include/rocksdb/env.h
index 16eb164..4e28559 100644
--- a/include/rocksdb/env.h
+++ b/include/rocksdb/env.h
@@ -22,6 +22,8 @@
 #include <memory>
 #include <vector>
 #include <stdint.h>
+#include <sys/time.h>
+#include <time.h>
 #include "rocksdb/status.h"

 namespace rocksdb {
diff --git a/util/crc32c.cc b/util/crc32c.cc
index 5008ddd..a3a5ec4 100644
--- a/util/crc32c.cc
+++ b/util/crc32c.cc
@@ -290,11 +290,11 @@ static const uint32_t table3_[256] = {
 static inline uint32_t LE_LOAD32(const uint8_t *p) {
   return DecodeFixed32(reinterpret_cast<const char*>(p));
 }
-
+#ifdef __SSE4_2__
 static inline uint64_t LE_LOAD64(const uint8_t *p) {
   return DecodeFixed64(reinterpret_cast<const char*>(p));
 }
-
+#endif
 static inline void Slow_CRC32(uint64_t* l, uint8_t const **p) {
   uint32_t c = *l ^ LE_LOAD32(*p);
   *p += 4;
```

