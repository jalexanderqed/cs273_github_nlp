Hi,

I have a question regarding configuring universal style compaction for rocksdb.  <br/>**Experiment setup** (QPS = Queries per second):

Values in rocksdb are stored as blobs. A blob can be of maximum size 16KB. Insert operation in this blob is read-update-write, i.e. we first read the blob and then update the blob by appending value at the end and then write it back to rocksdb. If size of blob is greater than 16KB, then we create a new blob and store this new value in this new blob. We are using Virident 2TB SSD drive for this test.
Expected Database size: ~21GB
Expected Write QPS: ~60
Expected Read QPS: ~10K with 999pct (999 percentile) latencies of each get = ~1ms
Expected key/value pairs in DB: 41M

**Numbers with level style compactions**:
We ran an experiment with level style compaction and got reads at 15K QPS (999pct = 15ms) with write at 60 QPS. At this read and write QPS, our disk was maxed out and iostat reported 99% disk utilization. Configuration of rocksdb for this test (values not mentioned are used as defaults):
filter_policy = rocksdb::NewBloomFilterPolicy(10);
write_buffer_size = 134217728;
max_open_files = 1000;
block_restart_interval = 16;
max_write_buffer_number = 3;
max_background_compactions = 20;
disable_seek_compaction = false;
source_compaction_factor = 1;
disable_auto_compactions = false;
level0_slowdown_writes_trigger = 12;
level0_file_num_compaction_trigger = 4;
level0_stop_writes_trigger = 50;
compression = (rocksdb::CompressionType) 0x1;
max_manifest_file_size = 4194304;
block_cache = rocksdb::NewLRUCache(4294967296, 8);
block_size = 1048576;
compaction_style = (rocksdb::CompactionStyle) 0x0; // level style compaction
stats_dump_period_sec = 60;

**Universal style compaction**:
Problem we saw with level style compaction was that it resulted in **~800 read/write amplification** and thus we turned to universal compaction to bring it down. Unfortunately, with universal style compaction we have not been able to get much throughput. We were able to get only 70 read QPS (999pct latencies = 1s) with writes at 50QPS. At this throughput, iostat does not report high disk utilization so it seems we are getting throttled somewhere else. Configuration we have tried for universal style compaction is as follows (ones not specified are used as defaults):

filter_policy = rocksdb::NewBloomFilterPolicy(10);
write_buffer_size = 65536;
max_open_files = 1000;
block_restart_interval = 16;
max_write_buffer_number = 3;
max_background_compactions = 20;
disable_seek_compaction = false;
source_compaction_factor = 1;
disable_auto_compactions = false;
level0_slowdown_writes_trigger = 100;
level0_file_num_compaction_trigger = 10;
level0_stop_writes_trigger = 200;
compression = (rocksdb::CompressionType) 0x1;
max_manifest_file_size = 4194304;
block_cache = rocksdb::NewLRUCache(4294967296, 8);
block_size = 1048576;
compaction_style = (rocksdb::CompactionStyle) 0x1;
stats_dump_period_sec = 60;

Can anyone please recommend as to what options are we configure for universal style compaction to achieve the throughput required.

