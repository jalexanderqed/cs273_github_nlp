This diff is required for sst_dump to actually report the error of a corrupt property block:

``` diff
diff --git a/tools/sst_dump.cc b/tools/sst_dump.cc
index b8c470f..8e00d69 100644
--- a/tools/sst_dump.cc
+++ b/tools/sst_dump.cc
@@ -118,10 +118,10 @@ Status SstFileReader::SetTableOptionsByMagicNumber(uint64_t table_magic_number,
   Status s = rocksdb::ReadTableProperties(file, file_size, table_magic_number,
                                           options_.env, options_.info_log.get(),
                                           &table_properties);
-  std::unique_ptr<TableProperties> props_guard(table_properties);
   if (!s.ok()) {
     return s;
   }
+  std::unique_ptr<TableProperties> props_guard(table_properties);

   if (table_magic_number == kBlockBasedTableMagicNumber) {
     options_.table_factory = std::make_shared<BlockBasedTableFactory>();
```

Without this a segmentation fault results. As an extra question, what is the best way to recover the data from a single corrupted sst file? The MANIFEST believes the file is the wrong size and the properties block isn't at the end of the file. Do I need to build a custom RepairDB tool? Or can I just re-add the records found in that single file?

Thanks for any help!

