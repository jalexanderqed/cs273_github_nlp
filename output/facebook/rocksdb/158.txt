Hi,

I have a question regarding the naming policy of branches/tags here on github. What is the purpose of naming the branches exactly as the tags? From my point of view it only adds confusion. For example our build server prints the following

```
simple  22-May-2014 13:49:38    From https://github.com/facebook/rocksdb
simple  22-May-2014 13:49:38     * [new branch]      3.0.fb     -> 3.0.fb
simple  22-May-2014 13:49:38     * [new tag]         3.0.fb     -> 3.0.fb
simple  22-May-2014 13:49:38    Checking out revision a1a1f61fa75e35340ec64624234f9b68520545b4.
simple  22-May-2014 13:49:38    warning: refname '3.0.fb' is ambiguous.
simple  22-May-2014 13:49:38    Switched to branch '3.0.fb'
```

Even github itself behaves a bit strange. For example this is the URL I get to view the branch 2.8.fb
https://github.com/facebook/rocksdb/tree/2.8.fb
However github generates the same URL when clicking on the **tag** 2.8.fb.
Which is wrong from my point of view, because the tag 2.8.fb and branch 2.8.fb point to two different commits. 

I know it is a tool problem only, because git itself allows branches and tags with the same name. Still it could lead to confusion.

I'm also wondering what is the intention of the branches with name
- 2.8.1.fb
- 2.8.fb.trunk
- why no 3.0.fb.trunk

For example the branch/tag names used at https://github.com/facebook/hhvm are obvious at the first look.
Branches look like
- hhvm-2.0
- hhvm-3.0

Which means each series has its own branch, where fixes for a specific series go into a branch. Tags have the following name
- hhvm-2.0.0
- hhvm-2.0.1
- hhvm-3.0.0

So for each bugfix version in a series a new tag is created.

I know there are a many 'git development schemes' I'm just wondering which one rocksdb follows.

