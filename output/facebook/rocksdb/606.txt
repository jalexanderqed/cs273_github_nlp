Using
 Centos 6
 GCC 4.9 using devtools-3
 Java 7
 Kernel 2.6.32-504.12.2.el6.x86_64

I am getting the following error after running a test for a while.
/usr/java/latest/bin/java: symbol lookup error: /tmp/librocksdbjni2974434001434564758..so: undefined symbol: clock_gettime

The same test runs fine on RocksDb 3.6. My investigation shows that librt.so is not linked with RocksDb correctly. My test (with 3.10.2) worked correctly after I ran
export LD_PRELOAD=/lib64/rtkaio/librt.so.1

To investigate the 3.10.2 library, I ran nm
$nm /tmp/librocksdbjni2974434001434564758..so | grep clock
0000000000332260 T _ZNSt6chrono3_V212steady_clock3nowEv
000000000037e33c R _ZNSt6chrono3_V212steady_clock9is_steadyE
0000000000332230 T _ZNSt6chrono3_V212system_clock3nowEv
000000000037e33d R _ZNSt6chrono3_V212system_clock9is_steadyE
                 U clock_gettime

I ran nm on the older rocksdb-3.6
nm /tmp/librocksdbjni1323312933457066341..so |grep clock
0000000000287390 T _ZNSt6chrono3_V212steady_clock3nowEv
00000000002c783c R _ZNSt6chrono3_V212steady_clock9is_steadyE
0000000000287360 T _ZNSt6chrono3_V212system_clock3nowEv
00000000002c783d R _ZNSt6chrono3_V212system_clock9is_steadyE

You can see that clock_gettime is undefined in 3.10.2 highlighted in the result of first nm command. Looking at the code, the single call to this function is only included in the C++ code if OS_LINUX or OS_FREEBSD is defined.

Judging from the above nm results, do you think, in 3.6, none of the two flags above were set, where as in 3.10, somehow at least one gets set?

