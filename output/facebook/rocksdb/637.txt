Compared to original leveldb
    mergedb: 853.131 micros/op;    4.6 MB/s
    leveldb: 1913.242 micros/op;    2.0 MB/s

In my strategy, size of n+1 level's data is only about twice the size of n level's data. And every compaction will compact all adjacent non-empty levels from level0 to a single level, which resulting less writes.
Suppose a LevelDB with 7 levels, there will be about 20 levels in my new db. The idea write amplification will be 1 write to log, 1 write to level0, and about 10 write to move up to level20, that is about 12 writes compared to 68 writes in original db.
I don't want to stop the write operation, so I compact data in a sophisticated way similar to the above, then resulting several extra writes. In all, the new writes will be about 15.

details can be found [mergedb](https://github.com/yedf/mergedb), Is anyone interested?

