  Summary. A change https://reviews.facebook.net/differential/diff/224721/
  Has attempted to move common functionality out of platform dependent
  code to a new facility called file_reader_writer.
  This includes:
- perf counters
- Buffering
- RateLimiting
  
  However, the change did not attempt to refactor Windows code.
  To mitigate, we introduce new quering interfaces such as UseOSBuffer(),
  GetRequiredBufferAlignment() and ReaderWriterForward()
  for pure forwarding where required.
  Introduce WritableFile got a new method Truncate(). This is to communicate
  to the file as to how much data it has on close.
  - When space is pre-allocated on Linux it is filled with zeros implicitly,
    no such thing exist on Windows so we must truncate file on close.
  - When operating in unbuffered mode the last page is filled with
    zeros but we still want to truncate.
  
  Previously, Close() would take care of it but now buffer
  management is shifted to the wrappers and the file has
  no idea about the file true size.
  
  This means that Close() on the wrapper level must always include
  Truncate() as well as wrapper __dtor should call Close() and
  against double Close().
  Move buffered/unbuffered write logic to the wrapper.
  Utilize Aligned buffer class.
  Adjust tests and implement Truncate() where necessary.
  Come up with reasonable defaults for new virtual interfaces.
  Forward calls for RandomAccessReadAhead class to avoid double
  buffering and locking (double locking in unbuffered mode on WIndows).
  
  There are two outstanding test failures
  which I believe is due to the same Mock framework bug.
  Both flush_job_test and compaction_job_test fail with 
  Assertion failed: result.size() == 4, file c:\dev\rocksdb\rocksdb\table\mock_table.cc, line 110
  
  After some debugging it looks like the test opens a RandomAccessFile .sst which
  remains empty. Mocked TableBuilder which is responsible for flushing a Level-0 file
  never actually writes anything to disk. At the end of the test we attempt to read 4 bytes
  at the beginning of an empty file and fail.

There are two more failures after refreshing from master but seem to be
of the more recent introduction.
- [ RUN      ] ColumnFamilyTest.ReadDroppedColumnFamily
  `c:\dev\rocksdb\rocksdb\db\column_family_test.cc`(1191): error: Value of: kKeysNum \* ((i == 2) ?
- [ RUN      ] TransactionTest.TimeoutTest
  `c:\dev\rocksdb\rocksdb\utilities\transactions\transaction_test.cc`(1523): error: s
  Operation timed out: Timeout waiting to lock key

