i had read leveldb's sourcecode before，i am reading rocksdb's source code now, i am so confused that  ttl is supported in rocksdb，but it may return expired keys....after i read sourcecode，i learned the code like below,

  int32_t timestamp_value = DecodeFixed32(str.data() + str.size() - kTSLength);
  if (timestamp_value < kMinTimestamp) {
    return Status::Corruption("Error: Timestamp < ttl feature release time!\n");
  }

if save  curtime + ttl in ts info while write, we can just change the code to filter expired keys, and there are no expired keys returned any more...

  int32_t timestamp_value = DecodeFixed32(str.data() + str.size() - kTSLength);
  if (timestamp_value <  curtimevalue) {
    return Status::NotFound();
  }

i want to know why we do not implement like this? is there any design problem?

PS: i am reading and analyzing rocksdb's source code now, and i am ready to write some blogs about my learns..haha~~

