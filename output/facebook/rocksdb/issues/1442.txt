RocksDB (via `build_tools/build_detect_platform`) determines at build time whether to use jemalloc, tcmalloc, or none. This is wrong for two reasons:
1. The choice of memory allocator should be left to the main program, not a library, so RocksDB shouldn't add `-ljemalloc` (or `-ltcmalloc`) to its own link line. Until recently, Linux would propagate a shared library's DT_NEEDED entries to the parent (see `--add-needed` or `--copy-dt-needed-entries` in `man ld`), so RocksDB's actions would force the main program to use jemalloc / tcmalloc. If we want to use `jemalloc` / `tcmalloc` in RocksDB **executables** (such as `ldb` and `db_bench`), then `-ljemalloc` / `-ltcmalloc` should be added to those executables' link lines.
2. If RocksDB determines that `jemalloc` is available, it assumes it will only be linked into binaries that use it as its memory allocator, and thus it calls `jemalloc`-specific functions, see the call to `malloc_stats_print` in https://github.com/facebook/rocksdb/blob/c90c48d3c89141bc8839a0fa69a6b5b2d4f03d08/db/db_impl.cc#L599. This leads to a link error if you try to link RocksDB into an executable that doesn't use `jemalloc`. The proper thing to do is to declare `malloc_stats_print` as weak, and check for its existence at runtime, but even that's technically not enough -- it should check that `jemalloc` is actually in use. I solved this in `folly` in a horrible way that I'm not at all proud of: https://github.com/facebook/folly/blob/1a48bcd9c77353535820239dff3e7f5f7c1e93bb/folly/Malloc.h#L143

(And yes, in an ideal world, the runtime check for jemalloc shouldn't be necessary, for the same reason as point 1 above -- a dlopen()ed shared object shouldn't depend on jemalloc.)

Is a pull request coming?

On Sun, Oct 30, 2016 at 4:36 PM, Tudor Bosman notifications@github.com
wrote:

> (And yes, in an ideal world, the runtime check for jemalloc shouldn't be
> necessary, for the same reason as point 1 above -- a dlopen()ed shared
> object shouldn't depend on jemalloc.)
> 
> â€”
> You are receiving this because you are subscribed to this thread.
> Reply to this email directly, view it on GitHub
> https://github.com/facebook/rocksdb/issues/1442#issuecomment-257188673,
> or mute the thread
> https://github.com/notifications/unsubscribe-auth/ABkKTaL2PsORRlstrWwa_eb-yNaO50qxks5q5SoQgaJpZM4KkisC
> .

## 

Mark Callaghan
mdcallag@gmail.com

Probably.

