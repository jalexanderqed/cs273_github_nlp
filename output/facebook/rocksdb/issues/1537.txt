When we introduced range deletion block, TableCache::Get() and TableCache::NewIterator() each did two table cache lookups, one for range deletion block iterator and another for getting the table reader to which the Get()/NewIterator() is delegated. This extra cache lookup was very CPU-intensive (about 10% overhead in a read-heavy benchmark). We can avoid it by reusing the Cache::Handle created for range deletion block iterator to get the file reader.

Test Plan:

command:

```
bpl=10485760;overlap=10;mcz=2;del=300000000;levels=6;ctrig=4; delay=8; stop=12; wbn=3; mbc=20; mb=67108864;wbs=134217728; dds=0; sync=0; r=10000000; t=32; vs=800; bs=4096; cs=1048576; of=500000; si=1000000; ./db_bench --benchmarks=readrandom --disable_seek_compaction=1 --mmap_read=0 --statistics=1 --histogram=1 --num=$r --threads=$t --value_size=$vs --block_size=$bs --cache_size=$cs --bloom_bits=10 --cache_numshardbits=6 --open_files=$of --verify_checksum=1 --db=/data/del_range_bench --sync=$sync --disable_wal=1 --compression_type=none --stats_interval=$si --compression_ratio=0.5 --disable_data_sync=$dds --write_buffer_size=$wbs --target_file_size_base=$mb --max_write_buffer_number=$wbn --max_background_compactions=$mbc --level0_file_num_compaction_trigger=$ctrig --level0_slowdown_writes_trigger=$delay --level0_stop_writes_trigger=$stop --num_levels=$levels --delete_obsolete_files_period_micros=$del --min_level_to_compress=$mcz --stats_per_interval=1 --max_bytes_for_level_base=$bpl --use_existing_db=1
```

before:

`readrandom   :       0.637 micros/op 1569129 ops/sec; 1221.1 MB/s (10000000 of 10000000 found)`

after:

`readrandom   :       0.581 micros/op 1720966 ops/sec; 1339.3 MB/s (10000000 of 10000000 found)`
@ajkr has imported this pull request.  If you are a Facebook employee, you can view this diff [on Phabricator](https://phabricator.intern.facebook.com/D4201167).

@ajkr updated the pull request - [view changes](https://github.com/facebook/rocksdb/pull/1537/files/f2697bfb8da7f19b1c518b520215c9efe6f16a35..770c46a5fbbb9d8c29fbbeb02faaa39476cc33eb) - [changes since last import](https://github.com/facebook/rocksdb/pull/1537/files/f2697bfb8da7f19b1c518b520215c9efe6f16a35..770c46a5fbbb9d8c29fbbeb02faaa39476cc33eb)
@ajkr updated the pull request - [view changes](https://github.com/facebook/rocksdb/pull/1537/files/770c46a5fbbb9d8c29fbbeb02faaa39476cc33eb..0bf66e2146fa90ce4e5494a24cb282c642e251af) - [changes since last import](https://github.com/facebook/rocksdb/pull/1537/files/770c46a5fbbb9d8c29fbbeb02faaa39476cc33eb..0bf66e2146fa90ce4e5494a24cb282c642e251af)
