This is a first pass at a solution to bug #222, a merge request opened for initial discussion of a solution.

Unit tests crash due to a double delete. In the constructor for a block, one passes in a BlockContents object. The Block's data_ field is set to the underlying Slice's pointer to the data. When passing in a BlockContents object that is allocated on the stack, the unique_ptr deletes the previously allocated memory once it goes out of scope, leaving the Block with a dangling pointer. An example can be pulled from block_based_table_builder.cc in BlockBasedTableBuilder::InsertBlockInCache:

``` c++
[...]
std::unique_ptr<char[]> ubuf(new char[size+1]);
ubuf[size] = type;

BlockContents results;
Slice sl(ubuf.get(), size);
results.data = sl;
results.cachable = true;
results.allocation = std::move(buf);
results.compression_type = type;

Block *block = new Block(results);
[...]
```

I'm not sure of the best way to proceed from here, but my gut tells me that sticking a std::unique_ptr in here will end up touching a lot more code than initially expected.

How did you manage a forward slash in the branch name...lol

@vinniefalco $ git checkout -b tdfischer/blockcontents-unique_ptr

Regarding the double free issue -- would it make sense to make Block constructor take rvalue and then std::move(BlockContents)?

This approach in general looks good to me. This code was written prior to C++11 and it's good that we're converting it using C++11 hotness.

BTW I assumed that the jury is still out to whether #222 is a RocksDB bug...? Did you guys find the root cause?

@igorcanadi Yes, a new approach does do std::move(BlockContents). Another patch is forthcoming.

Branch has been updated. This current attempt causes the DBTest.GetFromVersions unit test to fail, though the cause of it isn't immediately clear.

On failure it prints the output: Corruption: Unable to read the property block.

After a few rounds of more atomic refactoring, this solution passes all currently-passing unit tests and is suitable for review and merge.

Sorry, seems when I was moving branches around and squashing I misplaced a commit. Will open a new request once it is ready again.

Got it :) Thanks!

