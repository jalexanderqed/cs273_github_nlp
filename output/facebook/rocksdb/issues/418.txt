When running crossbuilds for RocksDB 3.8 JARs against Vagrant's CentOS VM, I get:

```
==> linux32: util/options_builder.cc: In function ‘void rocksdb::{anonymous}::OptimizeForLevel(int, int, uint64_t, rocksdb::Options*)’:
==> linux32: util/options_builder.cc:164:23: error: comparison between signed and unsigned integer expressions [-Werror=sign-compare]
==> linux32: g++ -g -Wall -Werror -Wsign-compare -Wshadow -I. -I./include -std=c++11  -DROCKSDB_PLATFORM_POSIX  -DOS_LINUX -fno-builtin-memcmp -DGFLAGS=google -DZLIB -DBZIP2   -DHAVE_JEMALLOC -fPIC -DNDEBUG -O2 -O2 -fno-omit-frame-pointer -momit-leaf-frame-pointer -Woverloaded-virtual -Wnon-virtual-dtor -c util/options_helper.cc -o util/options_helper.o 
==> linux32: cc1plus: all warnings being treated as errors
==> linux32: make[1]: 
==> linux32: *** [util/options_builder.o] Error 1
==> linux32: make[1]: 
==> linux32: *** Waiting for unfinished jobs....
==> linux32: make[1]: Leaving directory `/rocksdb'
==> linux32: make: 
==> linux32: *** [rocksdbjavastatic] Error 2
```

I am unable to release RocksDB 3.8 because of this.

This can be reproduced by running:

```
make jclean clean rocksdbjavastaticpublish
```

@fyrz FYI.

@igorcanadi is that commit here https://github.com/facebook/rocksdb/commit/0ce38fe983c5827b8424719c95f3d0aa8ef99fd4 also on 3.8 ?

It is now -- https://github.com/facebook/rocksdb/tree/3.8.fb

@criccomini  can you give it another try ?

I also published RocksDB 3.8.1 to include this fix (only this fix)

With latest 3.8.1, I get:

```
g++ -g -Wall -Werror -Wsign-compare -Wshadow -I. -I./include -std=c++11  -DROCKSDB_PLATFORM_POSIX  -DOS_MACOSX -DZLIB -DBZIP2 -Wshorten-64-to-32   -DHAVE_JEMALLOC -O2 -fno-omit-frame-pointer -momit-leaf-frame-pointer -Woverloaded-virtual -Wnon-virtual-dtor -I./java/. -I/Library/Java/JavaVirtualMachines/jdk1.7.0_71.jdk/Contents/Home/include -I /Library/Java/JavaVirtualMachines/jdk1.7.0_71.jdk/Contents/Home/include/darwin -shared -fPIC -o ./java/librocksdbjni-osx.jnilib ./java/rocksjni/*.cc db/builder.o db/c.o db/column_family.o db/compaction.o db/compaction_job.o db/compaction_picker.o db/db_filesnapshot.o db/db_impl.o db/db_impl_debug.o db/db_impl_readonly.o db/db_iter.o db/dbformat.o db/file_indexer.o db/filename.o db/flush_job.o db/flush_scheduler.o db/forward_iterator.o db/internal_stats.o db/log_reader.o db/log_writer.o db/memtable.o db/memtable_list.o db/merge_helper.o db/merge_operator.o db/repair.o db/table_cache.o db/table_properties_collector.o db/transaction_log_impl.o db/version_builder.o db/version_edit.o db/version_set.o db/wal_manager.o db/write_batch.o db/write_controller.o db/write_thread.o table/adaptive_table_factory.o table/block.o table/block_based_filter_block.o table/block_based_table_builder.o table/block_based_table_factory.o table/block_based_table_reader.o table/block_builder.o table/block_hash_index.o table/block_prefix_index.o table/bloom_block.o table/cuckoo_table_builder.o table/cuckoo_table_factory.o table/cuckoo_table_reader.o table/flush_block_policy.o table/format.o table/full_filter_block.o table/get_context.o table/iterator.o table/merger.o table/meta_blocks.o table/plain_table_builder.o table/plain_table_factory.o table/plain_table_index.o table/plain_table_key_coding.o table/plain_table_reader.o table/table_properties.o table/two_level_iterator.o util/arena.o util/auto_roll_logger.o util/blob_store.o util/bloom.o util/build_version.o util/cache.o util/coding.o util/comparator.o util/crc32c.o util/db_info_dumper.o util/dynamic_bloom.o util/env.o util/env_hdfs.o util/env_posix.o util/file_util.o util/filter_policy.o util/hash.o util/hash_cuckoo_rep.o util/hash_linklist_rep.o util/hash_skiplist_rep.o util/histogram.o util/iostats_context.o util/ldb_cmd.o util/ldb_tool.o util/log_buffer.o util/logging.o util/murmurhash.o util/mutable_cf_options.o util/options.o util/options_builder.o util/options_helper.o util/perf_context.o util/rate_limiter.o util/skiplistrep.o util/slice.o util/sst_dump_tool.o util/statistics.o util/status.o util/string_util.o util/sync_point.o util/thread_local.o util/thread_status_impl.o util/thread_status_impl_debug.o util/vectorrep.o util/xxhash.o utilities/backupable/backupable_db.o utilities/checkpoint/checkpoint.o utilities/compacted_db/compacted_db_impl.o utilities/document/document_db.o utilities/document/json_document.o utilities/geodb/geodb_impl.o utilities/leveldb_options/leveldb_options.o utilities/merge_operators/put.o utilities/merge_operators/string_append/stringappend.o utilities/merge_operators/string_append/stringappend2.o utilities/merge_operators/uint64add.o utilities/redis/redis_lists.o utilities/spatialdb/spatial_db.o utilities/ttl/db_ttl_impl.o utilities/write_batch_with_index/write_batch_with_index.o port/port_posix.o port/stack_trace.o  libz.a libbz2.a libsnappy.a
./java/rocksjni/backupablejni.cc:106:23: error: implicit conversion loses integer precision: 'size_type' (aka 'unsigned long') to 'const int' [-Werror,-Wshorten-64-to-32]
  const int kIdSize = backup_ids.size();
            ~~~~~~~   ^~~~~~~~~~~~~~~~~
1 error generated.
./java/rocksjni/restorejni.cc:159:23: error: implicit conversion loses integer precision: 'size_type' (aka 'unsigned long') to 'const int' [-Werror,-Wshorten-64-to-32]
  const int kIdSize = backup_ids.size();
            ~~~~~~~   ^~~~~~~~~~~~~~~~~
1 error generated.
make: *** [rocksdbjavastatic] Error 1
```

@criccomini need to verify this one tomorrow

Saw your pull request was merged. Is a 3.8.2 going to get cut to resolve this?

Chris, Can you try compiling java now? If it works, I’ll cut 3.8.2

From: Chris Riccomini <notifications@github.com<mailto:notifications@github.com>>
Reply-To: facebook/rocksdb <reply@reply.github.com<mailto:reply@reply.github.com>>
Date: Tuesday, November 25, 2014 at 10:16 PM
To: facebook/rocksdb <rocksdb@noreply.github.com<mailto:rocksdb@noreply.github.com>>
Cc: Igor Canadi <icanadi@fb.com<mailto:icanadi@fb.com>>
Subject: Re: [rocksdb] Can't build RocksDB 3.8 for Java (#418)

Saw your pull request was merged. Is a 3.8.2 going to get cut to resolve this?

—
Reply to this email directly or view it on GitHubhttps://github.com/facebook/rocksdb/issues/418#issuecomment-64509465.

I get:

```
./java/rocksjni/backupablejni.cc:115:37: error: implicit conversion loses integer precision: 'const std::vector<rocksdb::BackupID>::size_type' (aka 'const unsigned long') to
      'jsize' (aka 'int') [-Werror,-Wshorten-64-to-32]
  ret_backup_ids = env->NewIntArray(kIdSize);
                   ~~~              ^~~~~~~
./java/rocksjni/backupablejni.cc:116:45: error: implicit conversion loses integer precision: 'const std::vector<rocksdb::BackupID>::size_type' (aka 'const unsigned long') to
      'jsize' (aka 'int') [-Werror,-Wshorten-64-to-32]
  env->SetIntArrayRegion(ret_backup_ids, 0, kIdSize, int_backup_ids);
  ~~~                                       ^~~~~~~
2 errors generated.
./java/rocksjni/restorejni.cc:169:37: error: implicit conversion loses integer precision: 'const std::vector<rocksdb::BackupID>::size_type' (aka 'const unsigned long') to
      'jsize' (aka 'int') [-Werror,-Wshorten-64-to-32]
  ret_backup_ids = env->NewIntArray(kIdSize);
                   ~~~              ^~~~~~~
./java/rocksjni/restorejni.cc:170:45: error: implicit conversion loses integer precision: 'const std::vector<rocksdb::BackupID>::size_type' (aka 'const unsigned long') to
      'jsize' (aka 'int') [-Werror,-Wshorten-64-to-32]
  env->SetIntArrayRegion(ret_backup_ids, 0, kIdSize, int_backup_ids);
  ~~~                                       ^~~~~~~
2 errors generated.
make: *** [rocksdbjavastatic] Error 1
```

Also:

```
$ git status
On branch master
Your branch is up-to-date with 'origin/master'
```

Shows the patch from @fyrz in it:

```
commit 4f2e8bab5ff70c671f127dc7c4f6226b7d4e48b7
Merge: 14788e1 c4765dc
Author: Igor Canadi <igor.canadi@gmail.com>
Date:   Tue Nov 25 14:32:44 2014 -0500

    Merge pull request #421 from fyrz/RocksJava-PrecisionFix

    [RocksJava] Fix precision problem in rocksjni

commit c4765dc10b93d556154b2930247abc42182ca4ec
Author: fyrz <fyrgoss@gmail.com>
Date:   Tue Nov 25 20:29:52 2014 +0100

    [RocksJava] Fix precision problem in rocksjni
```

For reference, this can be reproduced simply by running:

```
make jclean clean rocksdbjavastaticrelease
```

From the CLI on an OSX 10.9 laptop.

@criccomini im looking at it. Sorry for the mess being a little blind 32/64 Bit linux complains about nothing.

@fyrz you can try compiling with clang on linux -- it will complain about these

@criccomini remaining issues are also fixed but not merged (https://github.com/facebook/rocksdb/pull/426)

Now I get:

```
g++ -g -Wall -Werror -Wsign-compare -Wshadow -I. -I./include -std=c++11  -DROCKSDB_PLATFORM_POSIX  -DOS_MACOSX -DZLIB -DBZIP2 -Wshorten-64-to-32   -DHAVE_JEMALLOC -O2 -fno-omit-frame-pointer -momit-leaf-frame-pointer -Woverloaded-virtual -Wnon-virtual-dtor -I./java/. -I/Library/Java/JavaVirtualMachines/jdk1.7.0_71.jdk/Contents/Home/include -I /Library/Java/JavaVirtualMachines/jdk1.7.0_71.jdk/Contents/Home/include/darwin -shared -fPIC -o ./java/librocksdbjni-osx.jnilib ./java/rocksjni/*.cc db/builder.o db/c.o db/column_family.o db/compaction.o db/compaction_job.o db/compaction_picker.o db/db_filesnapshot.o db/db_impl.o db/db_impl_debug.o db/db_impl_readonly.o db/db_iter.o db/dbformat.o db/file_indexer.o db/filename.o db/flush_job.o db/flush_scheduler.o db/forward_iterator.o db/internal_stats.o db/log_reader.o db/log_writer.o db/memtable.o db/memtable_list.o db/merge_helper.o db/merge_operator.o db/repair.o db/table_cache.o db/table_properties_collector.o db/transaction_log_impl.o db/version_builder.o db/version_edit.o db/version_set.o db/wal_manager.o db/write_batch.o db/write_controller.o db/write_thread.o table/adaptive_table_factory.o table/block.o table/block_based_filter_block.o table/block_based_table_builder.o table/block_based_table_factory.o table/block_based_table_reader.o table/block_builder.o table/block_hash_index.o table/block_prefix_index.o table/bloom_block.o table/cuckoo_table_builder.o table/cuckoo_table_factory.o table/cuckoo_table_reader.o table/flush_block_policy.o table/format.o table/full_filter_block.o table/get_context.o table/iterator.o table/merger.o table/meta_blocks.o table/plain_table_builder.o table/plain_table_factory.o table/plain_table_index.o table/plain_table_key_coding.o table/plain_table_reader.o table/table_properties.o table/two_level_iterator.o util/arena.o util/auto_roll_logger.o util/blob_store.o util/bloom.o util/build_version.o util/cache.o util/coding.o util/comparator.o util/crc32c.o util/db_info_dumper.o util/dynamic_bloom.o util/env.o util/env_hdfs.o util/env_posix.o util/file_util.o util/filter_policy.o util/hash.o util/hash_cuckoo_rep.o util/hash_linklist_rep.o util/hash_skiplist_rep.o util/histogram.o util/iostats_context.o util/ldb_cmd.o util/ldb_tool.o util/log_buffer.o util/logging.o util/murmurhash.o util/mutable_cf_options.o util/options.o util/options_builder.o util/options_helper.o util/perf_context.o util/rate_limiter.o util/skiplistrep.o util/slice.o util/sst_dump_tool.o util/statistics.o util/status.o util/string_util.o util/sync_point.o util/thread_local.o util/thread_status_impl.o util/thread_status_impl_debug.o util/vectorrep.o util/xxhash.o utilities/backupable/backupable_db.o utilities/checkpoint/checkpoint.o utilities/compacted_db/compacted_db_impl.o utilities/document/document_db.o utilities/document/json_document.o utilities/geodb/geodb_impl.o utilities/leveldb_options/leveldb_options.o utilities/merge_operators/put.o utilities/merge_operators/string_append/stringappend.o utilities/merge_operators/string_append/stringappend2.o utilities/merge_operators/uint64add.o utilities/redis/redis_lists.o utilities/spatialdb/spatial_db.o utilities/ttl/db_ttl_impl.o utilities/write_batch_with_index/write_batch_with_index.o port/port_posix.o port/stack_trace.o  libz.a libbz2.a libsnappy.a
cd java;strip librocksdbjni-osx.jnilib
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/strip: symbols referenced by indirect symbol table entries that can't be stripped in: /private/tmp/rocksdb/java/librocksdbjni-osx.jnilib
```

@criccomini solution here https://github.com/facebook/rocksdb/pull/429

Ran the build against master last night, and it seemed to work. Is there another upcoming 3.X release that we can cut so we can do a Java release?

@criccomini I hope we will release 3.9 next week. Would that be too late?

@fyrz is it hard to fix build of Java of 3.8 released branch?

@siying no i dont think it is hard. There are three commits which solve the MacOSX vs Linux problems:

Commits:
- c4765dc10b93d556154b2930247abc42182ca4ec
- 67cb7ca758b9b632ca6956dc26d2ef20d1ee627b
- b426675061741fe0beccb029f19a43fff99dda98

@fyrz since you are the expert, if it's not too complicated for you to do, can you help us port needed commits to branch "3.8.fb"?

I tried cherry-picking, but there were some conflicts. I'll fix manually.

An idea -- can we make `rocksdbjavastaticpublish` have a flag -Wno-error? That way, when we publish, warnings will not break the compile.

@igorcanadi thx

I could also provide a solution if you wish (have 8 hours time difference here)

@siying @igorcanadi 

I cross checked it here. The problematic code which was fixed within these three commits is not in the tagged tree 3.8 or 3.8.fb but in 3.8.1.

Probably it would make sense to publish Java from 3.8 tag without any modification and to publish the change with the fixes with 3.9.

I dont like the idea to switch off -Wno-error. Doing this would only lead to problems regarding MacOSX. As Adam is developing on MacOS i can doublecheck native changes with him.

@fyrz oh fixing 3.8.1 will be great. Never mind 3.8. I forgot we have a minor version.

@criccomini can you check against the rocks-3.8 tag. There shouldnt be any of those problems.

@fyrz  Ran `make jclean clean rocksdbjavastaticpublish` against:

```
$ git branch
* (detached from rocksdb-3.8)
  master
Chriss-MacBook-Pro:rocksdb criccomini$ git log
commit 7fe247080f6fc0fd9c2a55c376e2a10d4a351a1a
```

Got:

```
==> linux32: g++ -g -Wall -Werror -Wsign-compare -Wshadow -I. -I./include -std=c++11  -DROCKSDB_PLATFORM_POSIX  -DOS_LINUX -fno-builtin-memcmp -DGFLAGS=google -DZLIB -DBZIP2   -DHAVE_JEMALLOC -fPIC -DNDEBUG -O2 -O2 -fno-omit-frame-pointer -momit-leaf-frame-pointer -Woverloaded-virtual -Wnon-virtual-dtor -c util/options_helper.cc -o util/options_helper.o 
==> linux32: util/options_builder.cc: In function ‘void rocksdb::{anonymous}::OptimizeForLevel(int, int, uint64_t, rocksdb::Options*)’:
==> linux32: util/options_builder.cc:164:23: error: comparison between signed and unsigned integer expressions [-Werror=sign-compare]
==> linux32: cc1plus: all warnings being treated as errors
==> linux32: make[1]: 
==> linux32: *** [util/options_builder.o] Error 1
==> linux32: make[1]: 
==> linux32: *** Waiting for unfinished jobs....
==> linux32: make[1]: Leaving directory `/rocksdb'
==> linux32: make: 
==> linux32: *** [rocksdbjavastatic] Error 2
==> linux32: cp: 
==> linux32: omitting directory `/rocksdb/java/librocksdbjni-osx.jnilib.dSYM'
```

@criccomini I did not see that the branch has one more commit over the tag for 3.8. On the branch the options_builder problem is fixed but not while using the tag.

@igorcanadi cc. Are there plans to change this ?

@criccomini @fyrz We already fixed this in 3.8.fb branch. You should be trying to compile with 6c9f6a115f2f2e5b4eb57c17b6f0472e68115c35.

To better understand the difference between a version branch and a tag, please read this (in case you haven't already): https://github.com/facebook/rocksdb/wiki/RocksDB-Release-Methodology

@igorcanadi i think this one is done: http://search.maven.org/#artifactdetails%7Corg.rocksdb%7Crocksdbjni%7C3.8.0%7Cjar

Awesome! Should I close this task then?

BTW we will be releasing 3.9 soon (the branch is already cut), so please test the compile if you have some time. Thanks!

Closed. I'll run a 3.9 test run if/when I have time, and bug you guys mercilessly if anything is broken. :)

@criccomini did you find the time to check 3.9.0 ?

@fyrz Just released 3.9.0. Any idea when the next version is going to be released? Personally interested in the TTL Java patch that was applied mid-Jan.

Should be soon :) Maybe week or two

@criccomini is there any way to republish 3.9.0 ? I suppose that you build the rocksdbjava library upon tag 3.9 ? Sadly the thing is that this tag is missing a commit which is committed to the 3.9.fb branch. What leads to the situation that the RocksDB jar will fail with Sigsegv under certain circumstances. Especially while using read-only mode whats the only way to use a RocksDB database by multiple processes.

@igorcanadi @yhchiang  how can we handle this in future ? It shouldn`t happen that 3.9.fb is one commit ahead to the tag without having a patch tag right ?

@criccomini can you please verify before publishing with `jtest` target in future ? 

@fyrz we can change tag to point to latest build of the branch. Will that solve the problem?

Oh wow, this is a serious issue. I'll publish RocksDB 3.9.1 with the missing commit. This was a mistake on our part.

@siying Releases are supposed to be immutable, so we'll need to create release 3.9.1.

Removed 3.9 and released 3.9.1 with the fix.

@fyrz please add jtest as a dependency to the jni publication target. This way it'll get run automatically.

While you're at it, add this as the JAVA_INCLUDE for Mac, as well:

```
        JAVA_INCLUDE = -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.9.sdk/System/Library/Frameworks/JavaVM.framework/Versions/A/Headers
```

Published 3.9.1. `make jtest` passed.

