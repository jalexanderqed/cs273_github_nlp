This was crossposted to https://github.com/tecbot/gorocksdb/issues/24 and @rdallman suggest to make a definitive last key, I tried it didn't work(assuming my tests are right) https://github.com/tecbot/gorocksdb/issues/24#issuecomment-85105132 (related tests: https://github.com/yinhm/gorocksdb/commit/f90f8600b28466da6fa4b1aa37c7f6cae9bcb129)

I know this maybe Go client implementation specific question, still, help me.

This has been bugs me several days,  in TestCustomSliceTransform[1], if I open the old database without Destroy it first, then do the same iteration(without Put changes), the tests fails.

The docs[2] says: "If there is one or more keys in the database matching prefix of lookup_key, RocksDB will place the iterator to the key equal or **larger than lookup_key** of the same prefix, as for total ordering mode."

I'm not sure is this the expect behavior, it so, how do we do SeekToLast(), isn't this make SeekToLast() useless. 

```
$go test -run TestCustomSliceTransform
...........x
Failures:


  * /home/yinhm/gopath/src/github.com/yinhm/gorocksdb/slice_transform_test.go 
  Line 100:
  Expected: '3'
  Actual:   '6'
  (Should be equal)


12 assertions thus far
```

[1] https://github.com/yinhm/gorocksdb/commit/db9e6ddd99916eeb6fff5372f9a2c404e85b1db2
[2] https://github.com/facebook/rocksdb/wiki/Prefix-Seek-API-Changes

I have made some progress,  the inconsistency happens if using Plain table, Block-based table not affected,  see tests[1].
- TestCustomSliceTransform shows Plain table inconsistency.
- TestFixedPrefixTransformWithMax are just fine.

https://github.com/yinhm/gorocksdb/blob/d1b46e699514b88c42dac799126b0c9cb266d3e6/slice_transform_test.go

@yinhm can't figure out what went wrong. Is it possible for you to attach the whole DB so we can closely inspect it?

@siying You can download the attached db file here: https://www.dropbox.com/s/rd4shgjckg10cb7/TestNewSliceTransform.tgz?dl=0

Due to this issue, I switched from Plain Table to Block-based Table: https://github.com/yinhm/friendfeed/blob/master/storage/store.go#L103

Thank you for reporting this issue and appreciate your patience. We've  notified the core team for an update on this issue. We're looking for a response within the next 30 days or the issue may be closed.

