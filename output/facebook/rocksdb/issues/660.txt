
Does it actually work after you make this change? I could not get it working on ARM and I do remember making this change...

Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!

@immesys what was your error?

I had #633 #634 and #635. This was also on armv7l originally but I moved to x86 when debugging because the compiles were faster. I eventually gave up because I was told that 32 bit systems are not supported.

EDIT: to clarify, those issues were reported as reproduced on x86, but I submitted them because db_test was failing on ARM and I was trying to work out why.

Yeah, we don't currently support 32-bit systems. It's hard to properly support something we don't run in production. If we could get a continuous build on a 32-bit system, we might consider supporting it. But our cross-platform testing is still very weak (we don't even test on Mac).

immesys: Yes it works pretty fine. Running it on two arm machines in combination with influxdb. During compilation I got these two warnings:

```
util/thread_status_impl.cc: In static member function ‘static std::map<std::basic_string<char>, long long unsigned int> rocksdb::ThreadStatus::InterpretOperationProperties(rocksdb::ThreadStatus::OperationType, const uint64_t*)’:
util/thread_status_impl.cc:103:54: warning: left shift count >= width of type [-Wshift-count-overflow]
           {"OutputLevel", op_properties[i] % (1LU << 32)});
                                                      ^
util/thread_status_impl.cc:103:44: warning: division by zero [-Wdiv-by-zero]
           {"OutputLevel", op_properties[i] % (1LU << 32)});
                                            ^
```

P.S. I'm not going to sign the CLA. Too annoying. Either use my contribution without my CLA signature or don't, I don't care.

Thanks for your patch faulesocke. It is unfortunate that the CLA process is "too annoying". Please do let us know if we can make the process better. Are you concerned about the contents of the CLA or more woried about the time needed to read/fill/sign the CLA?

