In a couple of places the documentation hints at using RocksDB as a producer-consumer queue:
- http://rocksdb.org/: "A message-queue that supports a high number of inserts and deletes can use RocksDB"
- https://github.com/facebook/rocksdb/wiki/RocksDB-Basics "an essential feature when RocksDB is used as a producer-consumer-queue"

However I cannot find an example of it used in this way. Presumably a trivial implementation would use a sequence number as part of a key, and would have some way to get the next key after restart (e.g. persisting the sequence number as its own key, or finding the highest currently-used key in the key interval)

However as discussed in https://www.youtube.com/watch?v=HTjt6oj-RL4 there are a number of additional cases to consider such as large numbers of tombstones and mechanisms to maintain a message count.

Perhaps this would make an illuminating example in the documentation?

Hey @candlerb , @siying started a new wiki page: https://github.com/facebook/rocksdb/wiki/Implement-Queue-Service-Using-RocksDB

Let us know your feedback!

That is very helpful - thank you!

