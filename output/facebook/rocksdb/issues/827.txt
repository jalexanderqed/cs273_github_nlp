I see the following error when using rocksdbjava 4.0 on mac:

**Assertion failed: (refs_.load(std::memory_order_relaxed) == 0), function ~ColumnFamilyData, file db/column_family.cc, line 365**

This behaviour is only on MAC and not on LINUX.  Options that I am using are:

``` java
 dbOptions = new DBOptions()
                .setCreateIfMissing(true).setIncreaseParallelism(16).setParanoidChecks(false)
                .setAdviseRandomOnOpen(true).setMaxBackgroundCompactions(10)     
                 .setCreateMissingColumnFamilies(true) .setAllowOsBuffer(true)
                .setTableCacheNumshardbits(10) .setMaxBackgroundFlushes(10)
                .setWalTtlSeconds(5 * 60) .setMaxTotalWalSize(30 * SizeUnit.GB)
                .setMaxOpenFiles(-1) .setDisableDataSync(true)
                .setDeleteObsoleteFilesPeriodMicros(5 * 60 * 1000 * 1000)
                .setAllowOsBuffer(true).setUseFsync(false)
                .setBytesPerSync(2 << 20) .setUseAdaptiveMutex(true);

        BlockBasedTableConfig table_options = new BlockBasedTableConfig();
        Filter bloomFilter = new BloomFilter(10, true);
        table_options.setBlockCacheSize(512 * SizeUnit.MB)
                .setBlockCacheCompressedNumShardBits(8) .setFilter(bloomFilter)
                .setBlockSize(4096) .setBlockSizeDeviation(5).setBlockRestartInterval(10)
                .setBlockCacheCompressedSize(128 * SizeUnit.KB) .setCacheNumShardBits(8);

        columnFamilyOptions = new ColumnFamilyOptions() .setWriteBufferSize(512 * SizeUnit.MB)
                .setMaxWriteBufferNumber(20) .setMinWriteBufferNumberToMerge(2)
                .setMaxGrandparentOverlapFactor(10) .setTargetFileSizeBase(128 * SizeUnit.MB)
                .setMaxBytesForLevelBase(512 * SizeUnit.MB) 
                .setCompactionStyle(CompactionStyle.LEVEL)
                .setMemtablePrefixBloomBits(8 * 1024 * 1024) .setMemtablePrefixBloomProbes(6)
                .setBloomLocality(1) .setInplaceUpdateSupport(true)
                .setPurgeRedundantKvsWhileFlush(true) .setDisableAutoCompactions(false)
                .setFilterDeletes(true) .setLevelCompactionDynamicLevelBytes(true)
                .setMaxBytesForLevelMultiplier(10) .setLevelZeroFileNumCompactionTrigger(10)
                .setHardRateLimit(2) .setCompressionType(compressionType)
                .setMemTableConfig(new SkipListMemTableConfig())
                 .setTableFormatConfig(table_options);
```

That means you didn't close the column family before closing the database. It also means you're running our debug build -- the speed will be much better if you try release build.

I pulled the latest version from maven central. 

The order in which I close the db is:

 columnFamilyHandleList.forEach(ColumnFamilyHandle::dispose);
 this.rocksDB.dispose();
 this.rocksDB.close();

is dispose != close ?

Thanks @igorcanadi 

disposing all columnfamilyhandles fixed the issue. 

